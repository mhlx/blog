<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.qyh.blog.plugin.comment.dao.CommentDao">
	
	<resultMap type="Comment" id="CommentDetail">
		<id property="id" column="id"/>
		<result column="parent_path" property="parentPath"/>
		<result column="content" property="content"/>
		<result column="comment_date" property="commentDate"/>
		<result column="comment_status" property="status" typeHandler="EnumOrdinalTypeHandler"/>
		<result column="comment_nickname" property="nickname"/>
		<result column="comment_email" property="email"/>
		<result column="comment_ip" property="ip"/>
		<result column="comment_admin" property="admin"/>
		<result column="comment_gravatar" property="gravatar"/>
		<result column="comment_website" property="website"/>
		<result property="editor" column="comment_editor" typeHandler="EnumOrdinalTypeHandler" />
		<association property="commentModule" javaType="CommentModule">
			<result column="module_id" property="id"/>
			<result column="module_type" property="module"/>
		</association>
		<association property="parent" javaType="Comment">
			<result column="parent_id" property="id"/>
			<result column="p_comment_nickname" property="nickname"/>
			<result column="p_comment_email" property="email"/>
			<result column="p_comment_ip" property="ip"/>
			<result column="p_comment_admin" property="admin"/>
			<result column="p_comment_gravatar" property="gravatar"/>
		<result property="editor" column="p_comment_editor" typeHandler="EnumOrdinalTypeHandler" />
			<association property="commentModule" javaType="CommentModule">
				<result column="p_module_id" property="id"/>
				<result column="p_module_type" property="module"/>
			</association>
		</association>
	</resultMap>
	
	<resultMap type="me.qyh.blog.plugin.comment.vo.ModuleCommentCount" id="ModuleCommentCountDetail">
		<id column="module_sign"/>
		<result column="comments" property="comments"/>
		<association property="module" javaType="CommentModule">
			<result column="module_id" property="id"/>
			<result column="module_type" property="module"/>
		</association>
	</resultMap>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO blog_comment(parent_id,parent_path,content,module_type,module_id,comment_date,comment_status,comment_nickname,comment_email,comment_ip,comment_admin,comment_gravatar,comment_website,comment_editor)
		VALUES(#{parent.id},#{parentPath},#{content},#{commentModule.module},#{commentModule.id},#{commentDate},#{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler},#{nickname},#{email},#{ip},#{admin},#{gravatar},#{website},#{editor,javaType=Editor,typeHandler=EnumOrdinalTypeHandler})
	</insert>
	
	<select id="selectCountByIpAndDatePeriod" resultType="int">
		SELECT COUNT(id) FROM blog_comment 
		WHERE module_type = #{module.module}
		AND module_id = #{module.id}
		AND comment_ip = #{ip} 
		AND comment_date BETWEEN #{begin} AND #{end} 
	</select>
	
	<select id="selectCountWithTree" resultType="int">
		SELECT COUNT(id) FROM blog_comment 
		WHERE module_type = #{module.module}
		AND module_id = #{module.id} 
		AND parent_path = '/'
		<if test="status != null">
		   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
	</select>
	
	<select id="selectCountWithList" resultType="int">
		SELECT COUNT(id) FROM blog_comment 
		WHERE module_type = #{module.module}
		AND module_id = #{module.id} 
		<if test="status != null">
		   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		</if>
	</select>
	
	<select id="selectPageWithTree" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.module_id,a.module_type,a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website,a.comment_editor
		FROM 
		  blog_comment a JOIN 
		  (SELECT id, parent_path 
		    FROM blog_comment 
		    WHERE module_type = #{module.module}
			AND module_id = #{module.id} 
			AND parent_path = '/'
		    <if test="status != null">
		   		AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
		    <choose>
		    	<when test="asc">
		    		 ORDER BY comment_date ,id
		    	</when>
		    	<otherwise>
		    		 ORDER BY comment_date DESC,id DESC
		    	</otherwise>
		    </choose>
		  LIMIT #{offset},#{pageSize}) roots
		  ON (a.parent_path LIKE CONCAT('/',roots.id,'/%') OR a.id=roots.id)
		   <if test="status != null">
		    WHERE a.comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
	</select>
	
	<select id="selectPageWithList" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.module_id,a.module_type,a.comment_editor,
		  a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website,
		  p.comment_editor AS p_comment_edtior,p.comment_nickname AS p_comment_nickname,p.comment_email AS p_comment_email,p.comment_ip AS p_comment_ip,p.comment_admin AS p_comment_admin,p.comment_gravatar AS p_comment_gravatar,p.module_id AS p_module_id,p.module_type AS p_module_type
		FROM 
		  blog_comment a 
		LEFT OUTER JOIN blog_comment p ON a.parent_id = p.id
		WHERE a.module_type = #{module.module}
		AND a.module_id = #{module.id} 
		<if test="status != null">
		  	AND a.comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
		    </if>
		 <choose>
	    	<when test="asc">
	    		 ORDER BY a.comment_date ,id
	    	</when>
	    	<otherwise>
	    		 ORDER BY a.comment_date DESC,id DESC
	    	</otherwise>
	    </choose>
		LIMIT #{offset},#{pageSize}
	</select>
	
	<delete id="deleteByPath">
		DELETE FROM blog_comment  WHERE (parent_path LIKE CONCAT('', #{path},'%'))
	</delete>
	
	<delete id="deleteById">
		DELETE FROM blog_comment WHERE id = #{id}
	</delete>
	
	<select id="selectById" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.module_type,a.module_id,a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website,a.comment_editor
		 FROM blog_comment a 
		 WHERE a.id = #{id}
	</select>
	
	<select id="selectLast" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content
		 FROM blog_comment a 
		 WHERE a.module_type = #{commentModule.module}
		 AND a.module_id = #{commentModule.id} 
		 AND a.comment_ip = #{ip}
		 <choose>
		 	<when test="parent == null">
		 		AND parent_path = '/'
		 	</when>
		 	<otherwise>
		 		AND parent_id = #{parent.id}
		 	</otherwise>
		 </choose>
		 ORDER BY a.comment_date DESC,id DESC
		 LIMIT 0,1
	</select>
		
	<update id="updateStatus">
		UPDATE blog_comment SET comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler} WHERE id = #{id}
	</update>
	
	<delete id="deleteByModule">
		DELETE FROM blog_comment 
		WHERE module_type = #{module}
		AND module_id = #{id} 
	</delete>
	
	
	<select id="selectCommentCounts" resultMap="ModuleCommentCountDetail" >
		SELECT a.module_id,a.module_type,CONCAT(a.module_type,'_',a.module_id) AS module_sign,COUNT(*) AS comments FROM blog_comment a
		WHERE a.comment_status = 0<!-- NORMAL -->
		AND ( <foreach collection="list" item="module" open="" close="" separator="OR">
			(a.module_type = #{module.module}
		 	AND a.module_id = #{module.id} )
		</foreach> )
		GROUP BY a.module_type,a.module_id
	</select>
	
	<select id="selectCommentCount" resultMap="ModuleCommentCountDetail" >
		SELECT a.module_id,a.module_type,CONCAT(a.module_type,'_',a.module_id) AS module_sign,COUNT(*) AS comments FROM blog_comment a
		WHERE a.comment_status = 0<!-- NORMAL -->
		AND a.module_type = #{module}
		 AND a.module_id = #{id} 
		GROUP BY a.module_type,a.module_id
	</select>
	
	<select id="checkExistsByGravatar" resultType="boolean">
		SELECT EXISTS(SELECT 1 FROM blog_comment WHERE comment_gravatar = #{gravatar})
	</select>
	
	<select id="selectCountByPeriod" resultType="int">
		SELECT COUNT(id) FROM blog_comment
		<where>
			<if test="begin != null and end != null">
				comment_date BETWEEN #{begin} AND #{end}
			</if>
			<if test="status != null">
			   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
			</if>
		</where>
	</select>
	
	<select id="selectPageByPeriod" resultMap="CommentDetail">
		 SELECT 
		  a.id,a.parent_id,a.parent_path,a.content,a.module_id,a.module_type,a.comment_editor,
		  a.comment_date,a.comment_status,a.comment_nickname,a.comment_email,a.comment_ip,a.comment_admin,a.comment_gravatar,a.comment_website
		FROM 
		  blog_comment a 
		<where>
			<if test="begin != null and end != null">
				comment_date BETWEEN #{begin} AND #{end}
			</if>
			<if test="status != null">
			   AND comment_status = #{status,javaType=CommentStatus,typeHandler=EnumOrdinalTypeHandler}
			</if>
		</where> 
		ORDER BY comment_date DESC,id DESC
		LIMIT #{offset},#{pageSize}
	</select>
	
	<update id="update">
		UPDATE blog_comment
		set
			content = #{content}
		where id = #{id}
	</update>
	
	<select id="hasCommented" resultType="boolean">
		SELECT EXISTS(SELECT 1 FROM blog_comment WHERE comment_ip = #{ip} 
		<if test="module != null">
				AND module_type = #{module.module}
			<if test="module.id != null">
				AND module_id = #{module.id}
			</if>
		</if>
		)
	</select>
	
</mapper>